query me {
  me {
    id
    username
    role
  }
}

query getDefaultProject {
  getDefaultProject {
    code
    err
    msg {
      id
      name
    }
  }
}

mutation createKey(
  $name: String!
  $publicKey: String!
  # @genqlient(omitempty: true)
  $projectId: UUID
  $projectWide: Boolean
) {
  createKey(
    name: $name
    publicKey: $publicKey
    projectId: $projectId
    projectWide: $projectWide
  ) {
    code
    err
    msg {
      id
    }
  }
}

query getKey(
  # @genqlient(omitempty: true)
  $id: UUID
  # @genqlient(omitempty: true)
  $name: String
  # @genqlient(omitempty: true)
  $projectId: UUID
  # @genqlient(omitempty: true, pointer: true)
  $projectWide: Boolean
) {
  getKey(
    id: $id
    name: $name
    projectId: $projectId
    projectWide: $projectWide
  ) {
    code
    err
    msg {
      id
      name
      publicKey
      projectWide
    }
  }
}

mutation deleteKey(
  $id: UUID!
  # @genqlient(omitempty: true)
  $projectId: UUID
) {
  deleteKey(id: $id, projectId: $projectId) {
    code
    err
    msg
  }
}

mutation updateKey(
  $id: UUID!
  # @genqlient(omitempty: true)
  $projectId: UUID
  $name: String!
) {
  updateKey(id: $id, name: $name, projectId: $projectId) {
    code
    err
    msg {
      id
    }
  }
}

mutation createNetwork(
  $name: String!
  $availabilityZone: AvailabilityZone
  $projectId: UUID
  $subnets: [SubnetInput]!
) {
  createNetwork(
    projectId: $projectId
    name: $name
    availabilityZone: $availabilityZone
    subnets: $subnets
  ) {
    code
    err
    msg {
      id
      name
      subnets {
        cidr
        id
        name
      }
    }
  }
}

query getNetwork($id: UUID!, $projectId: UUID!) {
  getNetwork(id: $id, projectId: $projectId) {
    code
    err
    msg {
      id
      name
      availabilityZone
      subnets {
        id
        name
        ipVersion
        cidr
      }
    }
  }
}

mutation deleteNetwork($id: UUID!, $projectId: UUID!) {
  deleteNetwork(id: $id, projectId: $projectId) {
    code
    err
    msg
  }
}

mutation updateNetwork($id: UUID!, $projectId: UUID, $name: String!) {
  updateNetwork(id: $id, name: $name, projectId: $projectId) {
    code
    err
    msg {
      id
    }
  }
}

mutation deleteInstance($id: UUID!, $projectId: UUID!) {
  deleteInstance(id: $id, projectId: $projectId) {
    code
    err
    msg {
      status
    }
  }
}

mutation createInstance(
  $networkId: UUID!
  $flavorId: UUID!
  $imageId: UUID!
  $projectId: UUID!
  $name: String!
  $sshKeys: [UUID!]!
  $zone: AvailabilityZone!
  $managed: Boolean!
) {
  createInstance(
    flavor: $flavorId
    image: $imageId
    name: $name
    networks: [$networkId]
    sshKeys: $sshKeys
    projectId: $projectId
    zone: $zone
    managed: $managed
  ) {
    code
    err
    msg {
      id
    }
  }
}

query getInstance($id: UUID!, $projectId: UUID!) {
  getInstance(id: $id, projectId: $projectId) {
    code
    err
    msg {
      id
      name
      status
      availabilityZone
      flavorId
    }
  }
}

query getFlavorByName($name: String!) {
  getFlavorByName(name: $name) {
    code
    err
    msg {
      id
    }
  }
}

query getImageList($projectId: UUID!) {
  getImageList(projectId: $projectId) {
    code
    err
    msg {
      id
      name
    }
  }
}
